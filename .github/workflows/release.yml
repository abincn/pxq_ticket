name: Tauri Release (GitHub + Telegram)

on:
  push:
    tags:
      - 'v*' # 触发标签为 v1.0.0 这种格式
  workflow_dispatch: # 支持手动触发

jobs:
  release:
    strategy:
      fail-fast: false
      matrix:
        platform: [macos-latest, ubuntu-latest, windows-latest]
    runs-on: ${{ matrix.platform }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18
          cache: 'npm'

      - name: Setup Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable

      - name: Install cargo-edit
        run: |
          cargo install cargo-edit

      - name: Add/Update time crate to 0.3.35
        run: |
          cd src-tauri
          cargo add time@0.3.35

      - name: Install System Dependencies (Linux)
        if: matrix.platform == 'ubuntu-latest'
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            libgtk-3-dev webkit2gtk-4.0 \
            libappindicator3-dev librsvg2-dev patchelf

      - name: Install System Dependencies (macOS)
        if: matrix.platform == 'macos-latest'
        run: |
          brew install pkg-config cairo pango libpng jpeg giflib webkit2gtk@4.1
          brew link --force webkit2gtk@4.1

      - name: Install System Dependencies (Windows)
        if: matrix.platform == 'windows-latest'
        run: |
          choco install -y vcredist2015 visualstudio2022-workload-vctools
          refreshenv

      - name: Install App Dependencies
        run: npm install

      - name: Build & Release via Tauri Action
        uses: tauri-apps/tauri-action@v0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tagName: v__VERSION__
          releaseName: 'v__VERSION__'
          releaseBody: ${{ github.event.head_commit.message }}
          releaseDraft: false
          prerelease: false

  upload_to_telegram:
    runs-on: ubuntu-latest
    needs: release
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'

      - name: Install Python dependencies
        run: |
          pip install requests python-telegram-bot --user

      - name: Upload to Telegram
        env:
          TELEGRAM_BOT_TOKEN: ${{ secrets.TELEGRAM_BOT_TOKEN }}
          TELEGRAM_CHAT_ID: ${{ secrets.TELEGRAM_CHAT_ID }}
          OWNER: ${{ secrets.OWNER }}
          REPO: ${{ secrets.REPO }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          python upload_to_telegram.py
